import wx
import wx.lib.ogl as ogl


class DiamondShape(ogl.PolygonShape):
    def __init__(self, w=0.0, h=0.0):
        ogl.PolygonShape.__init__(self)
        if w == 0.0:
            w = 60.0
        if h == 0.0:
            h = 60.0

        points = [(0.0, -h / 2.0),
                  (w / 2.0, 0.0),
                  (0.0, h / 2.0),
                  (-w / 2.0, 0.0),
        ]

        self.Create(points)


#----------------------------------------------------------------------

class ScenarioShape(ogl.RectangleShape):
    def __init__(self, w=130.0, h=200.0):
        ogl.RectangleShape.__init__(self, w, h)
        self.SetCornerRadius(-0.1)


#----------------------------------------------------------------------
class MyEvtHandler(ogl.ShapeEvtHandler):
    def __init__(self):
        ogl.ShapeEvtHandler.__init__(self)

    def OnLeftClick(self, x, y, keys=0, attachment=0):
        shape = self.GetShape()
        canvas = shape.GetCanvas()
        dc = wx.ClientDC(canvas)
        canvas.PrepareDC(dc)
        # Save for scaling possibilty
        # if shape.Selected():
        #     shape.Select(False, dc)
        #     #canvas.Redraw(dc)
        #     canvas.Refresh(False)
        # else:
        #     redraw = False
        #     shapeList = canvas.GetDiagram().GetShapeList()
        #     toUnselect = []
        #
        #     for s in shapeList:
        #         if s.Selected():
        #             # If we unselect it now then some of the objects in
        #             # shapeList will become invalid (the control points are
        #             # shapes too!) and bad things will happen...
        #             toUnselect.append(s)
        #
        #     shape.Select(True, dc)
        #
        #     if toUnselect:
        #         for s in toUnselect:
        #             s.Select(False, dc)
        #
        #         canvas.Redraw(dc)
        #         canvas.Refresh(False)

